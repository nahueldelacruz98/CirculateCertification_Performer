<Activity mc:Ignorable="sap sap2010" x:Class="GetUserInformationFromFile" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_UserExcelFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_Username" Type="InArgument(x:String)" />
    <x:Property Name="out_drPersonalInfo" Type="OutArgument(sd:DataRow)" />
    <x:Property Name="out_drUserSettings" Type="OutArgument(sd:DataRow)" />
    <x:Property Name="out_drDestinationInfo" Type="OutArgument(sd:DataRow)" />
    <x:Property Name="out_drLaborInfo" Type="OutArgument(sd:DataRow)" />
    <x:Property Name="out_dtPeopleToAttend" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_drEmergencyInfo" Type="OutArgument(sd:DataRow)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1003,827</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetUserInformationFromFile_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetUserInformationFromFile" sap:VirtualizedContainerService.HintSize="376,602" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtSettings" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtPersonalData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtDestinationData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtLaborData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtEmergencyData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtPeopleToAttendSettings" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtPeopleToAttendData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start GetUserInformationFromFile workflow&quot;]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[&quot;Opening file &quot; + Path.GetFileName(in_UserExcelFilePath)]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope - Main file" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_UserExcelFilePath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="418,660" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Extract Settings" sap:VirtualizedContainerService.HintSize="376,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtAvailableCertificates" />
                <Variable x:TypeArguments="sd:DataTable" Name="dtDNITypes" />
                <Variable x:TypeArguments="sd:DataTable" Name="dtProvinces" />
                <Variable x:TypeArguments="sd:DataTable" Name="dtCertificateReasons" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtSettings]" DisplayName="Read Range - dtSettings" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="[in_Config(&quot;UserSettingsRange&quot;).ToString]" SheetName="[in_Config(&quot;UserSettingsSheet&quot;).ToString]" />
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtDNITypes]" DisplayName="Read Range - dtDNITypes" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="[in_Config(&quot;DBSettings_DNITypeRange&quot;).ToString]" SheetName="[in_Config(&quot;DBSettingsSheet&quot;).ToString]" />
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtProvinces]" DisplayName="Read Range - dtProvinces" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" Range="[in_Config(&quot;DBSettings_ProvincesRange&quot;).ToString]" SheetName="[in_Config(&quot;DBSettingsSheet&quot;).ToString]" />
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtCertificateReasons]" DisplayName="Read Range - dtCertificateReasons" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" Range="[in_Config(&quot;DBSettings_CertificateReasonsRange&quot;).ToString]" SheetName="[in_Config(&quot;DBSettingsSheet&quot;).ToString]" />
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtAvailableCertificates]" DisplayName="Read Range - dtAvailableCertificates" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="[in_Config(&quot;DBSettings_AvailableOptionsRange&quot;).ToString]" SheetName="[in_Config(&quot;DBSettingsSheet&quot;).ToString]" />
              <ui:JoinDataTables DataTable1="[dtSettings]" DataTable2="[dtDNITypes]" DisplayName="Join Data Tables - dtSettings - dtDNITypes" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="JoinDataTables_2" JoinType="Inner" OutputDataTable="[dtSettings]">
                <ui:JoinDataTables.Arguments>
                  <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
                    <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                      <ui:JoinOperationArgument.Column1>
                        <InArgument x:TypeArguments="x:String">[in_Config("DNIType_ColumnToCompare").ToString]</InArgument>
                      </ui:JoinOperationArgument.Column1>
                      <ui:JoinOperationArgument.Column2>
                        <InArgument x:TypeArguments="x:String">[in_Config("DNIType_ColumnToCompare").ToString]</InArgument>
                      </ui:JoinOperationArgument.Column2>
                    </ui:JoinOperationArgument>
                  </scg:List>
                </ui:JoinDataTables.Arguments>
              </ui:JoinDataTables>
              <ui:JoinDataTables DataTable1="[dtSettings]" DataTable2="[dtProvinces]" DisplayName="Join Data Tables - dtSettings - dtProvinces" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="JoinDataTables_3" JoinType="Inner" OutputDataTable="[dtSettings]">
                <ui:JoinDataTables.Arguments>
                  <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
                    <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                      <ui:JoinOperationArgument.Column1>
                        <InArgument x:TypeArguments="x:String">[in_Config("Province_ColumnToCompare").ToString]</InArgument>
                      </ui:JoinOperationArgument.Column1>
                      <ui:JoinOperationArgument.Column2>
                        <InArgument x:TypeArguments="x:String">[in_Config("Province_ColumnToCompare").ToString]</InArgument>
                      </ui:JoinOperationArgument.Column2>
                    </ui:JoinOperationArgument>
                  </scg:List>
                </ui:JoinDataTables.Arguments>
              </ui:JoinDataTables>
              <ui:JoinDataTables DataTable1="[dtCertificateReasons]" DataTable2="[dtAvailableCertificates]" DisplayName="Join Data Tables - dtCertificateReasons - dtAvailableCertificates" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="JoinDataTables_4" JoinType="Inner" OutputDataTable="[dtCertificateReasons]">
                <ui:JoinDataTables.Arguments>
                  <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
                    <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                      <ui:JoinOperationArgument.Column1>
                        <InArgument x:TypeArguments="x:String">[in_Config("CertificateReason_ColumnToCompare").ToString]</InArgument>
                      </ui:JoinOperationArgument.Column1>
                      <ui:JoinOperationArgument.Column2>
                        <InArgument x:TypeArguments="x:String">[in_Config("CertificateReason_ColumnToCompare").ToString]</InArgument>
                      </ui:JoinOperationArgument.Column2>
                    </ui:JoinOperationArgument>
                  </scg:List>
                </ui:JoinDataTables.Arguments>
              </ui:JoinDataTables>
              <ui:JoinDataTables DataTable1="[dtSettings]" DataTable2="[dtCertificateReasons]" DisplayName="Join Data Tables - dtSettings - dtAvailableCertificates" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="JoinDataTables_1" JoinType="Inner" OutputDataTable="[dtSettings]">
                <ui:JoinDataTables.Arguments>
                  <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
                    <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                      <ui:JoinOperationArgument.Column1>
                        <InArgument x:TypeArguments="x:String">[in_Config("CertificateType_ColumnToCompare").ToString]</InArgument>
                      </ui:JoinOperationArgument.Column1>
                      <ui:JoinOperationArgument.Column2>
                        <InArgument x:TypeArguments="x:String">[in_Config("CertificateType_ColumnToCompare").ToString]</InArgument>
                      </ui:JoinOperationArgument.Column2>
                    </ui:JoinOperationArgument>
                  </scg:List>
                </ui:JoinDataTables.Arguments>
              </ui:JoinDataTables>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Merge ready&quot;]" />
            </Sequence>
            <Sequence DisplayName="Extract Personal data" sap:VirtualizedContainerService.HintSize="376,66" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtPersonalData]" DisplayName="Read Range - dtPersonalData" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="[in_Config(&quot;PersonalInformationRange&quot;).ToString]" SheetName="[in_Config(&quot;PersonalInformationSheet&quot;).ToString]" />
            </Sequence>
            <Sequence DisplayName="Extract Destination data" sap:VirtualizedContainerService.HintSize="376,66" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtDestinationData]" DisplayName="Read Range - dtDestinationData" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="[in_Config(&quot;DestinationInformationRange&quot;).ToString]" SheetName="[in_Config(&quot;DestinationInformationSheet&quot;).ToString]" />
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtLaborData]" DisplayName="Read Range - dtLaborData" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" Range="[in_Config(&quot;LaborDataRange&quot;).ToString]" SheetName="[in_Config(&quot;DestinationInformationSheet&quot;).ToString]" />
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtEmergencyData]" DisplayName="Read Range - dtEmergencyData" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="[in_Config(&quot;EmergencyDataRange&quot;).ToString]" SheetName="[in_Config(&quot;DestinationInformationSheet&quot;).ToString]" />
            </Sequence>
            <Sequence DisplayName="Extract People-To-Attend data" sap:VirtualizedContainerService.HintSize="376,66" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtPeopleToAttendSettings]" DisplayName="Read Range - dtPeopleToAttendSettings" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" Range="[in_Config(&quot;PeopleToAttendSettingsRange&quot;).ToString]" SheetName="[in_Config(&quot;PeopleToAttendSheet&quot;).ToString]" />
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtPeopleToAttendData]" DisplayName="Read Range - dtPeopleToAttendData" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="[in_Config(&quot;PeopleToAttendInfoRange&quot;).ToString]" SheetName="[in_Config(&quot;PeopleToAttendSheet&quot;).ToString]" />
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Sequence DisplayName="Assign argument values" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Add columns from dtPeopleToAttendSettings to dtSettings" DisplayName="Add columns to dtSettings" sap:VirtualizedContainerService.HintSize="334,123" sap2010:WorkflowViewState.IdRef="Sequence_9">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Name="Counter" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign - Counter" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[Counter]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">0</InArgument>
          </Assign.Value>
        </Assign>
        <ui:InterruptibleWhile Condition="[Counter &lt; dtPeopleToAttendSettings.Columns.Count]" DisplayName="While - Counter is not equals than Columns amount" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
          <ui:InterruptibleWhile.Body>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,343" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="ColumnName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - ColumnName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ColumnName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[dtPeopleToAttendSettings.Columns(Counter).ColumnName]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[ColumnName]" DataTable="[dtSettings]" DefaultValue="[dtPeopleToAttendSettings.Rows(0)(ColumnName)]" DisplayName="Add Data Column - dtSettings" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AddDataColumn>
              <Assign DisplayName="Assign - Counter" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[Counter]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[Counter + 1]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:InterruptibleWhile.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InterruptibleWhile>
      </Sequence>
      <ui:MultipleAssign DisplayName="Multiple Assign - Output arguments" sap:VirtualizedContainerService.HintSize="334,253" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="sd:DataRow">[out_drUserSettings]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="sd:DataRow">[dtSettings.Rows(0)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="sd:DataRow">[out_drPersonalInfo]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="sd:DataRow">[dtPersonalData.Rows(0)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="sd:DataRow">[out_drDestinationInfo]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="sd:DataRow">[dtDestinationData.Rows(0)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="sd:DataRow">[out_drLaborInfo]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="sd:DataRow">[dtLaborData.Rows(0)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="sd:DataRow">[out_drEmergencyInfo]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="sd:DataRow">[dtEmergencyData.Rows(0)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="sd:DataTable">[out_dtPeopleToAttend]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="sd:DataTable">[dtPeopleToAttendData]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End -  GetUserInformationFromFile workflow&quot;]" />
  </Sequence>
</Activity>